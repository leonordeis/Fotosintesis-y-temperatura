# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1slD0BN-zvMdTduwl3I253-Todme71FKs
"""

import numpy as np
import matplotlib.pyplot as plt
from ipywidgets import interact

# Modelo simplificado: Fotosíntesis neta como función de temperatura
# Asumimos una curva en forma de campana (gaussiana), que tiene un máximo a una temperatura óptima
def fotosintesis_neta(temp, temp_opt=25, max_fotosintesis=10, ancho=10):
    """
    temp: temperatura actual
    temp_opt: temperatura óptima para fotosíntesis (°C)
    max_fotosintesis: fotosíntesis máxima a temperatura óptima
    ancho: ancho de la curva (cómo de rápido cae la fotosíntesis fuera del óptimo)
    """
    return max_fotosintesis * np.exp(-((temp - temp_opt)**2) / (2 * ancho**2))

def simular(temp_actual):
    temperaturas = np.linspace(0, 50, 500)  # rango de temperaturas de 0 a 50 °C
    fotosintesis = fotosintesis_neta(temperaturas)

    plt.figure(figsize=(8,5))
    plt.plot(temperaturas, fotosintesis, label='Curva fotosíntesis neta')
    plt.axvline(temp_actual, color='r', linestyle='--', label=f'Temperatura actual: {temp_actual} °C')
    plt.scatter([temp_actual], [fotosintesis_neta(temp_actual)], color='red')
    plt.title('Simulación de Fotosíntesis Neta vs Temperatura')
    plt.xlabel('Temperatura (°C)')
    plt.ylabel('Fotosíntesis neta (unidades arbitrarias)')
    plt.legend()
    plt.grid(True)
    plt.show()

interact(simular, temp_actual=(0,50,0.5))